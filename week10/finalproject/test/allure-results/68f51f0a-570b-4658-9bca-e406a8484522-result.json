{"name": "test_login_successfully", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF66C0EEEB2+31554]\n\t(No symbol) [0x00007FF66C067EE9]\n\t(No symbol) [0x00007FF66BF2872A]\n\t(No symbol) [0x00007FF66BF78434]\n\t(No symbol) [0x00007FF66BF7853C]\n\t(No symbol) [0x00007FF66BFBF6A7]\n\t(No symbol) [0x00007FF66BF9D06F]\n\t(No symbol) [0x00007FF66BFBC977]\n\t(No symbol) [0x00007FF66BF9CDD3]\n\t(No symbol) [0x00007FF66BF6A33B]\n\t(No symbol) [0x00007FF66BF6AED1]\n\tGetHandleVerifier [0x00007FF66C3F8B2D+3217341]\n\tGetHandleVerifier [0x00007FF66C445AF3+3532675]\n\tGetHandleVerifier [0x00007FF66C43B0F0+3489152]\n\tGetHandleVerifier [0x00007FF66C19E786+750614]\n\t(No symbol) [0x00007FF66C07376F]\n\t(No symbol) [0x00007FF66C06EB24]\n\t(No symbol) [0x00007FF66C06ECB2]\n\t(No symbol) [0x00007FF66C05E17F]\n\tBaseThreadInitThunk [0x00007FFBFCF47374+20]\n\tRtlUserThreadStart [0x00007FFBFDAFCC91+33]", "trace": "self = <week10.finalproject.test.test_login.TestLogin testMethod=test_login_successfully>\n\n    @allure.story('Successful Login')\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_login_successfully(self):\n        \"\"\"\n        login successful with valid email and password\n        click login in navbar\n        popup appear so put input and click login\n        wait to popup disappear and validate username appears\n        :return:\n        \"\"\"\n        # Arrange\n        self.logger.info(\"test login successfully starts.\")\n        self.login_page.fill_email_input(self.config[\"email\"])\n        self.login_page.fill_password_input(self.config[\"password\"])\n    \n        # Act\n        # click on login\n        self.login_page.click_login()\n    \n        # Assert\n>       self.assertIsNotNone(self.navbar.get_avatar())\n\ntest_login.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\logic\\components\\navbar.py:101: in get_avatar\n    return wait.until(EC.element_to_be_clickable((By.XPATH, self.AVATAR_LOC)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"791262269ebe0681794442adbe91b9f2\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000027DCFEE1430>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF66C0EEEB2+31554]\nE       \t(No symbol) [0x00007FF66C067EE9]\nE       \t(No symbol) [0x00007FF66BF2872A]\nE       \t(No symbol) [0x00007FF66BF78434]\nE       \t(No symbol) [0x00007FF66BF7853C]\nE       \t(No symbol) [0x00007FF66BFBF6A7]\nE       \t(No symbol) [0x00007FF66BF9D06F]\nE       \t(No symbol) [0x00007FF66BFBC977]\nE       \t(No symbol) [0x00007FF66BF9CDD3]\nE       \t(No symbol) [0x00007FF66BF6A33B]\nE       \t(No symbol) [0x00007FF66BF6AED1]\nE       \tGetHandleVerifier [0x00007FF66C3F8B2D+3217341]\nE       \tGetHandleVerifier [0x00007FF66C445AF3+3532675]\nE       \tGetHandleVerifier [0x00007FF66C43B0F0+3489152]\nE       \tGetHandleVerifier [0x00007FF66C19E786+750614]\nE       \t(No symbol) [0x00007FF66C07376F]\nE       \t(No symbol) [0x00007FF66C06EB24]\nE       \t(No symbol) [0x00007FF66C06ECB2]\nE       \t(No symbol) [0x00007FF66C05E17F]\nE       \tBaseThreadInitThunk [0x00007FFBFCF47374+20]\nE       \tRtlUserThreadStart [0x00007FFBFDAFCC91+33]\n\n..\\..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "\n        login successful with valid email and password\n        click login in navbar\n        popup appear so put input and click login\n        wait to popup disappear and validate username appears\n        :return:\n        ", "attachments": [{"name": "log", "source": "4c231ccd-2f59-4129-8db5-25f2c3d9afce-attachment.txt", "type": "text/plain"}], "start": 1721897355198, "stop": 1721897393330, "uuid": "37290d1f-787f-40a0-8a09-22c11870fa2e", "historyId": "30a257dc361fc07682d75d642e34874d", "testCaseId": "30a257dc361fc07682d75d642e34874d", "fullName": "test_login.TestLogin#test_login_successfully", "labels": [{"name": "feature", "value": "Login Feature"}, {"name": "severity", "value": "critical"}, {"name": "story", "value": "Successful Login"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-K7V76BU"}, {"name": "thread", "value": "21596-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}